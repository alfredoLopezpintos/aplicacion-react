{"version":3,"sources":["components/Header/Header.module.css","components/PostITsEdit/PostITsEdit.module.css","components/PostITs/PostITs.module.css","components/TrashBin/TrashBin.module.css","components/Home/Home.module.css","components/AddPostIT/AddPostIT.module.css","Redux/postITsSlice.js","Redux/handleTextSlice.js","components/AddPostIT/index.jsx","components/PostITsEdit/index.jsx","components/PostITs/index.jsx","components/TrashBin/index.jsx","components/Header/index.jsx","components/Home/Index.jsx","reportWebVitals.js","Redux/store.js","index.jsx"],"names":["module","exports","postITsSlice","createSlice","name","initialState","posts","reducers","addPostIT","state","action","newPostIT","id","nanoid","textContent","payload","textAddPostIt","date","Date","getDate","getMonth","getFullYear","deleted","editPostIT","newPosts","filter","post","deletePostIT","deleteForeverPostIT","recoverPostIT","reloadPostITs","actions","handleTextSlice","textEditPostIt","edit","handleNewPostITChange","handleEditPostITChange","handleNewID","handleEdit","cancelHandleEdit","AddPostIT","dispatch","useDispatch","value","useSelector","className","AddPostITCSS","note","cols","rows","placeholder","maxLength","onChange","event","target","length","HomeCSS","footer","type","save","onClick","trim","document","getElementById","PostITsEdit","setIsEditing","PostITsEditCSS","textarea","divider","List","postIt","useState","isEditing","PostITsCSS","scroll","icon","PostITs","result","postITs","map","list","TrashBin","TrashBinCSS","confirm","Header","deltedPosts","HeaderCSS","trashIcon","header","home","to","trash","Home","useEffect","savedNotes","JSON","parse","localStorage","getItem","forEach","element","setItem","stringify","err","console","log","container","path","exact","component","PostsComponent","TrashComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","postITReducer","addPostITReducer","middleware","getDefaultMiddleware","concat","logger","ReactDOM","render","StrictMode","indexCSS","body","code"],"mappings":"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","file":"static/js/main.e6542cac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__LkFHt\",\"trash\":\"Header_trash__DfbdT\",\"trashIcon\":\"Header_trashIcon__3arTL\",\"home\":\"Header_home__CvbIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"PostITsEdit_textarea__14tr6\",\"divider\":\"PostITsEdit_divider__1GwE4\",\"note\":\"PostITsEdit_note__2DyOO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"PostITs_note__1Ynrp\",\"scroll\":\"PostITs_scroll__3_9Od\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"TrashBin_note__1mLdk\",\"scroll\":\"TrashBin_scroll__3X_X3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"divider\":\"Home_divider__2J5bC\",\"container\":\"Home_container__3hCqa\",\"icon\":\"Home_icon__1zXKg\",\"list\":\"Home_list__2inHX\",\"footer\":\"Home_footer__2R4M6\",\"save\":\"Home_save__36m3q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"AddPostIT_note__2uRo9\"};","/* eslint-disable no-param-reassign */\r\nimport { createSlice, nanoid } from '@reduxjs/toolkit';\r\n\r\nconst postITsSlice = createSlice({\r\n  name: 'postits',\r\n  initialState: {\r\n    posts: [],\r\n  },\r\n  reducers: {\r\n    addPostIT: (state, action) => {\r\n      const newPostIT = {\r\n        id: nanoid(),\r\n        textContent: action.payload.textAddPostIt,\r\n        date: `${new Date().getDate()}/${new Date().getMonth() + 1}/${new Date().getFullYear()}`,\r\n        deleted: false,\r\n      };\r\n      state.posts = [...state.posts, newPostIT];\r\n    },\r\n    editPostIT: (state, action) => {\r\n      const newPostIT = {\r\n        id: action.payload.id,\r\n        textContent: action.payload.textContent,\r\n        date: action.payload.date,\r\n        deleted: false,\r\n      };\r\n      const newPosts = state.posts.filter((post) => post.id !== action.payload.id);\r\n      state.posts = [...newPosts, newPostIT];\r\n    },\r\n    deletePostIT: (state, action) => {\r\n      const newPostIT = {\r\n        id: action.payload.id,\r\n        textContent: action.payload.textContent,\r\n        date: action.payload.date,\r\n        deleted: true,\r\n      };\r\n      const newPosts = state.posts.filter((post) => post.id !== action.payload.id);\r\n      state.posts = [...newPosts, newPostIT];\r\n    },\r\n    deleteForeverPostIT: (state, action) => {\r\n      state.posts = state.posts.filter((post) => post.id !== action.payload);\r\n    },\r\n    recoverPostIT: (state, action) => {\r\n      const newPostIT = {\r\n        id: action.payload.id,\r\n        textContent: action.payload.textContent,\r\n        date: action.payload.date,\r\n        deleted: false,\r\n      };\r\n      const newPosts = state.posts.filter((post) => post.id !== action.payload.id);\r\n      state.posts = [...newPosts, newPostIT];\r\n    },\r\n    reloadPostITs: (state, action) => {\r\n      const newPostIT = {\r\n        id: action.payload.id,\r\n        textContent: action.payload.textContent,\r\n        date: action.payload.date,\r\n        deleted: action.payload.deleted,\r\n      };\r\n      state.posts = [...state.posts, newPostIT];\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addPostIT, deletePostIT, deleteForeverPostIT, editPostIT, recoverPostIT, reloadPostITs,\r\n} = postITsSlice.actions;\r\n\r\nexport default postITsSlice.reducer;\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst handleTextSlice = createSlice({\r\n  name: 'handleText',\r\n  initialState: {\r\n    textAddPostIt: '',\r\n    textEditPostIt: '',\r\n    edit: false,\r\n    post: '',\r\n  },\r\n  reducers: {\r\n    handleNewPostITChange: (state, action) => {\r\n      state.textAddPostIt = action.payload;\r\n    },\r\n    handleEditPostITChange: (state, action) => {\r\n      state.textEditPostIt = action.payload;\r\n    },\r\n    handleNewID: (state, action) => {\r\n      state.id = action.payload;\r\n    },\r\n    handleEdit: (state, action) => {\r\n      state.edit = true;\r\n\r\n      state.post = action.payload;\r\n    },\r\n    cancelHandleEdit: (state) => {\r\n      state.edit = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  handleNewPostITChange, handleEditPostITChange, handleNewID, handleEdit, cancelHandleEdit,\r\n} = handleTextSlice.actions;\r\n\r\nexport default handleTextSlice.reducer;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handleNewPostITChange } from '../../Redux/handleTextSlice';\r\nimport { addPostIT } from '../../Redux/postITsSlice';\r\nimport HomeCSS from '../Home/Home.module.css';\r\nimport AddPostITCSS from './AddPostIT.module.css';\r\n\r\nexport const AddPostIT = () => {\r\n  const dispatch = useDispatch();\r\n  const characterLimit = 200;\r\n  const value = useSelector((state) => state.AddPostIT);\r\n  const handleAddPostIT = () => {\r\n    if (value.textAddPostIt.trim().length > 0) {\r\n      dispatch(addPostIT(value));\r\n      document.getElementById(1000).value = '';\r\n      dispatch(handleNewPostITChange(''));\r\n    }\r\n  };\r\n  const handleChange = (event) => {\r\n    if (characterLimit - event.target.value.length >= 0) {\r\n      dispatch(handleNewPostITChange(event.target.value));\r\n    }\r\n  };\r\n  return (\r\n    <div className={AddPostITCSS.note}>\r\n      <textarea\r\n        id=\"1000\"\r\n        cols=\"10\"\r\n        rows=\"8\"\r\n        placeholder=\"Type here...\"\r\n        maxLength=\"200\"\r\n        onChange={handleChange}\r\n      />\r\n      <div className={HomeCSS.footer}>\r\n        <small>\r\n          {characterLimit - value.textAddPostIt.length}\r\n          {' '}\r\n          Remaining\r\n        </small>\r\n        <button\r\n          type=\"button\"\r\n          className={HomeCSS.save}\r\n          onClick={handleAddPostIT}\r\n        >\r\n          Save\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPostIT;\r\n","/* eslint-disable react/prop-types */\r\nimport { React } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { handleEditPostITChange } from '../../Redux/handleTextSlice';\r\nimport { editPostIT } from '../../Redux/postITsSlice';\r\nimport PostITsEditCSS from './PostITsEdit.module.css';\r\nimport HomeCSS from '../Home/Home.module.css';\r\n\r\nconst PostITsEdit = ({ post, setIsEditing }) => {\r\n  const dispatch = useDispatch();\r\n  const characterLimit = 200;\r\n  const value = useSelector((state) => state.AddPostIT);\r\n\r\n  const handleChange = (event) => {\r\n    if (characterLimit - event.target.value.length >= 0) {\r\n      dispatch(handleEditPostITChange(event.target.value));\r\n      handleEditPostITChange('');\r\n    }\r\n  };\r\n  const handleEditPostIT = () => {\r\n    if (value.textEditPostIt.trim().length > 0) {\r\n      const newPostIT = {\r\n        id: post.id,\r\n        textContent: value.textEditPostIt,\r\n        date: `${new Date().getDate()}/${new Date().getMonth() + 1}/${new Date().getFullYear()}${' '}Edited`,\r\n        deleted: false,\r\n      };\r\n\r\n      dispatch(editPostIT(newPostIT));\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={PostITsEditCSS.note}>\r\n      <textarea\r\n        className={PostITsEditCSS.textarea}\r\n        cols=\"10\"\r\n        rows=\"8\"\r\n        placeholder=\"Type here...\"\r\n        maxLength=\"200\"\r\n        onChange={handleChange}\r\n      />\r\n      <div className={HomeCSS.footer}>\r\n        <small>\r\n          {characterLimit - value.textEditPostIt.length}\r\n          {' '}\r\n          Remaining\r\n        </small>\r\n        <div>\r\n          <button onClick={() => setIsEditing(false)} type=\"button\" className={HomeCSS.save}>Cancel</button>\r\n          <div className={PostITsEditCSS.divider} />\r\n          <button type=\"button\" className={HomeCSS.save} onClick={handleEditPostIT}>Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostITsEdit;\r\n","import { React, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MdDelete, MdModeEdit } from 'react-icons/md';\r\nimport PostITsCSS from './PostITs.module.css';\r\nimport HomeCSS from '../Home/Home.module.css';\r\nimport { deletePostIT } from '../../Redux/postITsSlice';\r\nimport AddPost from '../AddPostIT';\r\nimport EditPostIt from '../PostITsEdit/index';\r\n\r\nexport const PostITs = () => {\r\n  const { posts } = useSelector((state) => state.postITs);\r\n\r\n  const result = posts.map((post) => !post.deleted && (\r\n    <>\r\n      <List post={post} />\r\n    </>\r\n  ));\r\n\r\n  return (\r\n    <div className={HomeCSS.list}>\r\n      {result}\r\n      <AddPost />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst List = (...value) => {\r\n  const postIt = value[0].post;\r\n  const dispatch = useDispatch();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  return isEditing\r\n    ? <EditPostIt post={postIt} setIsEditing={setIsEditing} />\r\n    : (\r\n      <div className={PostITsCSS.note} key={postIt.id}>\r\n        <span className={PostITsCSS.scroll}>{ postIt.textContent }</span>\r\n        <div className={HomeCSS.footer}>\r\n          <small>{ postIt.date }</small>\r\n          <div>\r\n            <MdModeEdit onClick={() => setIsEditing(!isEditing)} className={HomeCSS.icon} />\r\n            <div className={HomeCSS.divider} />\r\n            <MdDelete onClick={() => dispatch(deletePostIT(postIt))} className={HomeCSS.icon} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default PostITs;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MdDeleteForever, MdUndo } from 'react-icons/md';\r\nimport { deleteForeverPostIT, recoverPostIT } from '../../Redux/postITsSlice';\r\nimport TrashBinCSS from './TrashBin.module.css';\r\nimport HomeCSS from '../Home/Home.module.css';\r\n\r\nexport const TrashBin = () => {\r\n  const dispatch = useDispatch();\r\n  const { posts } = useSelector((state) => state.postITs);\r\n\r\n  const result = posts.map((post) => post.deleted && (\r\n    <div className={TrashBinCSS.note} key={post.id}>\r\n      <span className={TrashBinCSS.scroll}>{ post.textContent }</span>\r\n      <div className={HomeCSS.footer}>\r\n        <small>{ post.date }</small>\r\n        <div>\r\n          <MdUndo onClick={() => dispatch(recoverPostIT(post))} className={HomeCSS.icon} />\r\n          <div className={HomeCSS.divider} />\r\n          <MdDeleteForever\r\n            onClick={() => {\r\n              // eslint-disable-next-line no-restricted-globals\r\n              const response = confirm('Are you sure you want to delete this PostIT forever?\\nYou will not be able to recover it!');\r\n              if (response) dispatch(deleteForeverPostIT(post.id));\r\n            }}\r\n            className={HomeCSS.icon}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n  return (\r\n    <div className={HomeCSS.list}>\r\n      {result}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrashBin;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { MdDelete, MdDeleteForever } from 'react-icons/md';\r\nimport HeaderCSS from './Header.module.css';\r\n\r\nexport const Header = () => {\r\n  const { posts } = useSelector((state) => state.postITs);\r\n  const deltedPosts = posts.filter((post) => post.deleted);\r\n  const result = (((deltedPosts.length !== 0)\r\n  && (<MdDeleteForever className={HeaderCSS.trashIcon} />))\r\n    || ((deltedPosts.length === 0) && (<MdDelete className={HeaderCSS.trashIcon} />)));\r\n\r\n  return (\r\n    <div className={HeaderCSS.header}>\r\n      <Link className={HeaderCSS.home} to=\"/aplicacion-react\">\r\n        <b>PostITs</b>\r\n      </Link>\r\n      <Link className={HeaderCSS.trash} to=\"/TrashBin\">\r\n        {result}\r\n        <b>Trash Bin</b>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { React, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport HomeCSS from './Home.module.css';\r\nimport { reloadPostITs } from '../../Redux/postITsSlice';\r\nimport PostsComponent from '../PostITs/index';\r\nimport TrashComponent from '../TrashBin/index';\r\nimport HeaderComponent from '../Header/index';\r\n\r\nexport const Home = () => {\r\n  const { posts } = useSelector((state) => state.postITs);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const savedNotes = JSON.parse(localStorage.getItem('react-postits-app-data'));\r\n\r\n    if (savedNotes) {\r\n      savedNotes.forEach((element) => {\r\n        dispatch(reloadPostITs(element));\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      localStorage.setItem('react-postits-app-data', JSON.stringify(posts));\r\n    } catch (err) {\r\n      // eslint-disable-next-line no-console\r\n      console.log(err);\r\n    }\r\n  }, [posts]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className={HomeCSS.Home}>\r\n        <header className=\"Home-header\">\r\n          <div className={HomeCSS.container}>\r\n            <HeaderComponent />\r\n            <Switch>\r\n              <Route path=\"/aplicacion-react\" exact component={PostsComponent} />\r\n              <Route path=\"/TrashBin\" component={TrashComponent} />\r\n            </Switch>\r\n          </div>\r\n        </header>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport postITReducer from './postITsSlice';\r\nimport addPostITReducer from './handleTextSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    postITs: postITReducer,\r\n    AddPostIT: addPostITReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport indexCSS from './index.module.css';\r\nimport HomeApp from './components/Home/Index';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './Redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HomeApp className={indexCSS.body && indexCSS.code} />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}